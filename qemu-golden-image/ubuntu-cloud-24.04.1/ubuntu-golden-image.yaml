---
- name: Download current Ubuntu Cloud Image
  hosts: localhost
  gather_facts: true
  become_user: bsmits
  vars_files:
    - ~/secrets/creds.yml
  vars:
    ansible_become_pass: "{{ become_password }}"
    cloud_init_force_download: false
    cloud_init_img_download_version: noble
    cloud_init_template_name: golden-ubuntu-24.04.1

  tasks:
    - include_role:
        name: cloud_init
        tasks_from: localhost-tasks.yml
  tags:
    - download

- name: Proxmox tasks
  hosts: proxmox_prd
  gather_facts: true
  become: true
  vars_files:
    - ~/secrets/creds.yml
  vars:
    ansible_become_pass: "{{ become_password }}"
    var_api_host: proxmox-prd.devopsfables.net
    var_api_user: root@pam
    var_api_token_id: "{{ vault_api_token_id }}"
    var_api_token_secret: "{{ vault_api_token_secret }}"
    cloud_init_template_name: golden-ubuntu-24.04.1
    
    # Cloud-init User
    cloud_init_ciuser: ansibleadmin # Change this to match the ansible admin user in the vault.
    
    # VM setttings   
    cloud_init_storage_target: LVM-Prime # Change this to match existing storage on Proxmox.
    cloud_init_disksize: 20G
    cloud_init_template_vmid: 9999
  tasks:
    - include_role:
        name: cloud_init
        tasks_from: proxmox-tasks.yml
  tags:
    - create

#   # This is a test to see if the VM is created and started, it can remain commented out unless testing of the templte is desired.
#   # Use the command 'ansible-playbook ubuntu-golden-image.yaml --tags test' to run this task alone.
# - name: start test vm
#   hosts: proxmox_prd
#   vars_files:
#     - ~/secrets/creds.yml
#   vars:
#     #ansible_become_pass: "{{ vault_api_password }}"
#     var_vm_name: test-vm
#   tasks:
#     - name: Clone and start test vm
#       community.general.proxmox_kvm:
#         node: proxmox
#         api_user: root@pam
#         api_host: proxmox-prd.devopsfables.net
#         api_token_id: "{{ vault_api_token_id }}"
#         api_token_secret: "{{ vault_api_token_secret }}"
#         clone: golden-ubuntu-24.04.1
#         name: "{{ var_vm_name }}"
#         timeout: 500
#       register: start_result



#     - name: Start the cloned VM
#       community.general.proxmox_kvm:
#         node: proxmox
#         api_user: root@pam
#         api_host: proxmox-prd.devopsfables.net
#         api_token_id: "{{ vault_api_token_id }}"
#         api_token_secret: "{{ vault_api_token_secret }}"
#         vmid: "{{ start_result.vmid }}"
#         state: started
#         timeout: 500
#       when: start_result is success
    
#     - name: Print start result
#       ansible.builtin.debug:
#         var: start_result
#   tags:
#     - test
